			                                          第三章 操作符
 在最底层，Java中的数据是通过使用操作符来操作的
 3.1 更简单的打印语句
 静态导入工具类，或者通过包装方法使代码更加简洁
 package part2;
import java.util.Date;
import static com.tech.Print.*;
public class HelloDate {
    public static void main(String[] args){
        print("hello,it's:");
        print(new Date());
    }
}
 3.2 使用java操作符
 +、-、*、/、=、==、!=
 3.3 优先级
 解决多个操作符情况下，表达式计算的先后顺序，以免产生歧义
 3.4 赋值
 赋值运算符：取右边的值，复制给左边的变量（java中都是值传递，没有地址传递，对象传递的只是引用）
 3.5 算数操作符
 +、-、*、/、%、java.util.Randrom类提供了大量生成随机数的方法
 3.6 自动递增和递减
 自动递增、递减存在一个注意点，就是先加（减）再赋值，还是先赋值在加（减）
 3.7 关系操作符
 产生boolean类型的表达式，==表达式就是比较值是否相等的操作符
 3.8 逻辑操作符
 逻辑操作符（&&、||、!）连接boolean类型变量，其中存在一个注意点就是短路操作，以及此引发的简洁表达过程
 3.9 直接常量
 浮点类型默认double类型、整形默认int类型，变量类型转换问题
 3.10 按位操作符
 一般用于整数类型底层的二进制操作，也可进行逻辑操作，但是不是短路行为
 3.11 移位操作符
 <</>>/>>>
 3.12 三元操作符（?:）
 唯一一个三元操作符，某些地方可以使代码看上去简介，跟if...else作用完全相同，但是？：会产生一个值
 3.13 字符串操作符
 +、+=，操作符重载，也是java中唯一的操作符重载
 3.14 使用操作符时常犯的错误
 =、==，赋值和相等比较容易出错，与或非的短路操作，与非短路操作容易混淆
 3.15 类型转换操作符
 （）强制类型转换
 3.16 java没有“sizeof”
 因为虚拟机的存在，java中相同类型在不同机器上所占用的存储单元是相同的
 3.17 操作符小结
 char、byte、short进行运算时，自动提升为int类型，同时注意每种类型表达数量的范围以免溢出
 3.18 总结
 操作符是机器模拟自然人类社会出现的易于理解的符号，基本所有的编程语言在操作符上的操作都十分相似
